# Copyright Louis Dionne 2013-2016
# Copyright Gonzalo BG 2014-2016
# Copyright Julian Becker 2015
# Copyright Manu Sánchez 2015
# Copyright Casey Carter 2015-2016
# Copyright Eric Niebler 2015-2016
# Copyright Paul Fultz II 2015-2016

# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.txt or copy at http://boost.org/LICENSE_1_0.txt)

# Adapted from various sources, including:
# - Louis Dionne's Hana: https://github.com/ldionne/hana
# - Paul Fultz II's FIT: https://github.com/pfultz2/Fit
language: cpp
script: cmake

# Test matrix:
# - Build matrix per compiler: C++11/C++14 + Debug/Release
# - Optionally: AddressSanitizer (ASAN)
# - Valgrind: all release builds are also tested with valgrind
# - clang 3.5, 3.6, trunk
#   - Note: trunk is tested with/without ASAN,
#     the rest are only tested with ASAN=On.
# - gcc 4.9, 5
#
matrix:
  include:
    - env: BUILD_TYPE=Release CPP=11 ASAN=Off SYSTEM_LIBCXX=On
      os: osx
      compiler: clang

    # ASAN disabled for clang < 3.8 builds per resolution of
    #  https://llvm.org/bugs/show_bug.cgi?id=22757

    # Test clang-3.4: C++11, Build=Debug/Release, ASAN=On/Off
    # - env: CLANG_VERSION=3.4 BUILD_TYPE=Debug CPP=11 ASAN=On LIBCXX=On
    #   os: linux
    #   compiler: clang34
    #   addons: &clang34
    #     apt:
    #       packages:
    #         - valgrind
    #       sources:
    #         - ubuntu-toolchain-r-test

    # - env: CLANG_VERSION=3.4 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
    #   os: linux
    #   compiler: clang
    #   addons: *clang34
    # - env: CLANG_VERSION=3.4 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=On
    #   os: linux
    #   compiler: clang
    #   addons: *clang34
    # - env: CLANG_VERSION=3.4 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=On
    #   os: linux
    #   compiler: clang
    #   addons: *clang34

    # Test clang-3.5: C++11/C++14, Build=Debug/Release, ASAN=On/Off
    # - env: CLANG_VERSION=3.5 BUILD_TYPE=Debug CPP=11 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: &clang35
    #     apt:
    #       packages:
    #         - clang-3.5
    #         - valgrind
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-precise-3.5

    # - env: CLANG_VERSION=3.5 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang35

    # - env: CLANG_VERSION=3.5 BUILD_TYPE=Debug CPP=14 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang35

    # - env: CLANG_VERSION=3.5 BUILD_TYPE=Release CPP=14 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang35

    # Uncomment these to test without AddressSanitizer
    # - env: CLANG_VERSION=3.5 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang35
    # - env: CLANG_VERSION=3.5 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang35
    # - env: CLANG_VERSION=3.5 BUILD_TYPE=Debug CPP=14 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang35
    # - env: CLANG_VERSION=3.5 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang35

    # Test clang-3.6: C++11/C++14, Build=Debug/Release, ASAN=On/Off
    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Debug CPP=11 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: &clang36
    #     apt:
    #       packages:
    #         - clang-3.6
    #         - valgrind
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-precise-3.6

    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang36

    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Debug CPP=14 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang36

    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Release CPP=14 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang36

    # Uncomment these to test without AddressSanitizer
    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang36
    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang36
    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Debug CPP=14 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang36
    # - env: CLANG_VERSION=3.6 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang36

    # Test clang-3.7: C++11/C++14, Build=Debug/Release, ASAN=On/Off
    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: &clang37
    #     apt:
    #       packages:
    #         - util-linux
    #         - clang-3.7
    #         - valgrind
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-precise-3.7

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang37

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug CPP=14 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang37

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=On
    #   os: linux
    #   addons: *clang37

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug CPP=11 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang37

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang37

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug CPP=14 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang37

    # - env: CLANG_VERSION=3.7 BUILD_TYPE=Release CPP=14 ASAN=On LIBCXX=On
    #   os: linux
    #   addons: *clang37

    # Test clang-4.0: C++11/C++14/1z, LIBCXX=On/Off, Build=Debug/Release, ASAN=On/Off
    - env: CLANG_VERSION=4.0 BUILD_TYPE=Debug CPP=11 ASAN=On LIBCXX=On
      os: linux
      addons: &clang40
        apt:
          packages:
            - util-linux
            - clang-4.0
            - valgrind
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise

    # Release + ASAN + C++11/14/1z
    - env: CLANG_VERSION=4.0 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
      os: linux
      addons: *clang40

    - env: CLANG_VERSION=4.0 BUILD_TYPE=Release CPP=14 ASAN=On LIBCXX=On
      os: linux
      addons: *clang40

    - env: CLANG_VERSION=4.0 BUILD_TYPE=Release CPP=1z ASAN=On LIBCXX=On
      os: linux
      addons: *clang40

    # Release + Valgrind + C++11/14/1z
    - env: CLANG_VERSION=4.0 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=On
      os: linux
      addons: *clang40

    - env: CLANG_VERSION=4.0 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=On
      os: linux
      addons: *clang40

    - env: CLANG_VERSION=4.0 BUILD_TYPE=Release CPP=1z ASAN=Off LIBCXX=On
      os: linux
      addons: *clang40

    # Debug + C++11/14/1z
    - env: CLANG_VERSION=4.0 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=On
      os: linux
      addons: *clang40

    - env: CLANG_VERSION=4.0 BUILD_TYPE=Debug CPP=14 ASAN=Off LIBCXX=On
      os: linux
      addons: *clang40

    - env: CLANG_VERSION=4.0 BUILD_TYPE=Debug CPP=1z ASAN=Off LIBCXX=On
      os: linux
      addons: *clang40

    # Debug + C++11 + libstdc++
    - env: CLANG_VERSION=4.0 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: *clang40

    # Test gcc-4.8: C++11, Build=Debug/Release, ASAN=Off
    - env: GCC_VERSION=4.8 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: &gcc48
        apt:
          packages:
            - g++-4.8
            - valgrind
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=4.8 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc48

    # Test gcc-4.9: C++11/14, Build=Debug/Release, ASAN=Off
    - env: GCC_VERSION=4.9 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: &gcc49
        apt:
          packages:
            - g++-4.9
            - valgrind
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=4.9 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc49

    - env: GCC_VERSION=4.9 BUILD_TYPE=Debug CPP=14 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc49

    - env: GCC_VERSION=4.9 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc49

    # Test gcc-5: C++11/14, Build=Debug/Release, ASAN=On/Off
    - env: GCC_VERSION=5 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: &gcc5
        apt:
          packages:
            - g++-5
            - valgrind
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=5 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc5

    - env: GCC_VERSION=5 BUILD_TYPE=Debug CPP=14 ASAN=Off LIBCXX=Off CXX_FLAGS="-DRANGES_CXX_CONSTEXPR=RANGES_CXX_CONSTEXPR_11"
      os: linux
      addons: *gcc5

    - env: GCC_VERSION=5 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=Off CXX_FLAGS="-DRANGES_CXX_CONSTEXPR=RANGES_CXX_CONSTEXPR_11"
      os: linux
      addons: *gcc5

    # Test gcc-6: C++11/14/1z, Build=Debug/Release, ASAN=Off
    - env: GCC_VERSION=6 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: &gcc6
        apt:
          packages:
            - g++-6
            - valgrind
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=6 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=6 BUILD_TYPE=Debug CPP=14 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=6 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=6 BUILD_TYPE=Debug CPP=1z ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=6 BUILD_TYPE=Release CPP=1z ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

# Install dependencies
before_install:
  - export CHECKOUT_PATH=`pwd`;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install valgrind; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install gnu-sed --with-default-names; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install gnu-which --with-default-names; fi
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [ "$CLANG_VERSION" == "3.4" ]; then export CXX="/usr/local/clang-3.4/bin/clang++" CC="/usr/local/clang-3.4/bin/clang"; fi
  - which $CXX
  - which $CC
  - which valgrind
  - $CXX --version
  - if [ "$ASAN" == "On" ]; then export SANITIZER=Address; fi
  - if [ -n "$CLANG_VERSION" ]; then sudo CXX=$CXX CC=$CC ./install_libcxx.sh; fi


install:
  - cd $CHECKOUT_PATH

  # Workaround for valgrind bug: https://bugs.kde.org/show_bug.cgi?id=326469.
  # It is fixed in valgrind 3.10 so this won't be necessary if someone
  # replaces the current valgrind (3.7) with valgrind-3.10
  - if [ "$BUILD_TYPE" == "Release" ] && [ "$ASAN" == "Off" ]; then sed -i 's/march=native/msse4.2/' CMakeLists.txt; fi

  - mkdir -p build
  - cd build
  - if [ -n "$CLANG_VERSION" -a "$ASAN" == "On" ]; then CXX_FLAGS="${CXX_FLAGS} -fsanitize=address,undefined,integer -fno-omit-frame-pointer -fno-sanitize=unsigned-integer-overflow"; fi
  - if [ -n "$GCC_VERSION" -a "$ASAN" == "On" ]; then CXX_FLAGS="${CXX_FLAGS} -fsanitize=address,undefined -fno-omit-frame-pointer"; fi
  - if [ -n "$CLANG_VERSION" ]; then CXX_FLAGS="${CXX_FLAGS} -D__extern_always_inline=inline"; fi
  - if [ "$LIBCXX" == "On" ]; then CXX_FLAGS="${CXX_FLAGS} -stdlib=libc++ -nostdinc++ -cxx-isystem /usr/include/c++/v1/ -Wno-unused-command-line-argument"; fi
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" -DCMAKE_EXE_LINKER_FLAGS="${CXX_LINKER_FLAGS}" -DRANGES_CXX_STD=$CPP -DRANGE_V3_NO_HEADER_CHECK=1
  - make VERBOSE=1

script:
  # Only enable valgrind for non-ASAN Release builds (keep this in sync with line 309)
  - if [ "$BUILD_TYPE" == "Release" ] && [ "$ASAN" == "Off" ]; then CTEST_FLAGS="-D ExperimentalMemCheck"; fi
  - ctest -VV ${CTEST_FLAGS}

notifications:
  email: false
