cxx_test(
  PRETTY_NAME test.alg.adjacent_find
  BIN_NAME alg.adjacent_find
  SOURCES adjacent_find.cpp
)

cxx_test(
  PRETTY_NAME test.alg.all_of
  BIN_NAME alg.all_of
  SOURCES all_of.cpp
)

cxx_test(
  PRETTY_NAME test.alg.any_of
  BIN_NAME alg.any_of
  SOURCES any_of.cpp
)

cxx_test(
  PRETTY_NAME test.alg.none_of
  BIN_NAME alg.none_of
  SOURCES none_of.cpp
)

cxx_test(
  PRETTY_NAME test.alg.binary_search
  BIN_NAME alg.binary_search
  SOURCES binary_search.cpp
)

cxx_test(
  PRETTY_NAME test.alg.copy
  BIN_NAME alg.copy
  SOURCES copy.cpp
)

cxx_test(
  PRETTY_NAME test.alg.copy_backward
  BIN_NAME alg.copy_backward
  SOURCES copy_backward.cpp
)

cxx_test(
  PRETTY_NAME test.alg.count
  BIN_NAME alg.count
  SOURCES count.cpp
)

cxx_test(
  PRETTY_NAME test.alg.count_if
  BIN_NAME alg.count_if
  SOURCES count_if.cpp
)

cxx_test(
  PRETTY_NAME test.alg.equal
  BIN_NAME alg.equal
  SOURCES equal.cpp
)

cxx_test(
  PRETTY_NAME test.alg.equal_range
  BIN_NAME alg.equal_range
  SOURCES equal_range.cpp
)

cxx_test(
  PRETTY_NAME test.alg.fill
  BIN_NAME alg.fill
  SOURCES fill.cpp
)

cxx_test(
  PRETTY_NAME test.alg.find
  BIN_NAME alg.find
  SOURCES find.cpp
)

cxx_test(
  PRETTY_NAME test.alg.find_end
  BIN_NAME alg.find_end
  SOURCES find_end.cpp
)

cxx_test(
  PRETTY_NAME test.alg.find_if
  BIN_NAME alg.find_if
  SOURCES find_if.cpp
)

cxx_test(
  PRETTY_NAME test.alg.find_first_of
  BIN_NAME alg.find_first_of
  SOURCES find_first_of.cpp
)

cxx_test(
  PRETTY_NAME test.alg.for_each
  BIN_NAME alg.for_each
  SOURCES for_each.cpp
)

cxx_test(
  PRETTY_NAME test.alg.generate
  BIN_NAME alg.generate
  SOURCES generate.cpp
)

cxx_test(
  PRETTY_NAME test.alg.generate_n
  BIN_NAME alg.generate_n
  SOURCES generate_n.cpp
)

cxx_test(
  PRETTY_NAME test.alg.includes
  BIN_NAME alg.includes
  SOURCES includes.cpp
)

cxx_test(
  PRETTY_NAME test.alg.inplace_merge
  BIN_NAME alg.inplace_merge
  SOURCES inplace_merge.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_heap1
  BIN_NAME alg.is_heap1
  SOURCES is_heap1.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_heap2
  BIN_NAME alg.is_heap2
  SOURCES is_heap2.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_heap3
  BIN_NAME alg.is_heap3
  SOURCES is_heap3.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_heap4
  BIN_NAME alg.is_heap4
  SOURCES is_heap4.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_heap_until1
  BIN_NAME alg.is_heap_until1
  SOURCES is_heap_until1.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_heap_until2
  BIN_NAME alg.is_heap_until2
  SOURCES is_heap_until2.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_heap_until3
  BIN_NAME alg.is_heap_until3
  SOURCES is_heap_until3.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_heap_until4
  BIN_NAME alg.is_heap_until4
  SOURCES is_heap_until4.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_partitioned
  BIN_NAME alg.is_partitioned
  SOURCES is_partitioned.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_permutation
  BIN_NAME alg.is_permutation
  SOURCES is_permutation.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_sorted_until
  BIN_NAME alg.is_sorted_until
  SOURCES is_sorted_until.cpp
)

cxx_test(
  PRETTY_NAME test.alg.is_sorted
  BIN_NAME alg.is_sorted
  SOURCES is_sorted.cpp
)

cxx_test(
  PRETTY_NAME test.alg.lexicographical_compare
  BIN_NAME alg.lexicographical_compare
  SOURCES lexicographical_compare.cpp
)

cxx_test(
  PRETTY_NAME test.alg.lower_bound
  BIN_NAME alg.lower_bound
  SOURCES lower_bound.cpp
)

cxx_test(
  PRETTY_NAME test.alg.make_heap
  BIN_NAME alg.make_heap
  SOURCES make_heap.cpp
)

cxx_test(
  PRETTY_NAME test.alg.max_element
  BIN_NAME alg.max_element
  SOURCES max_element.cpp
)

cxx_test(
  PRETTY_NAME test.alg.merge
  BIN_NAME alg.merge
  SOURCES merge.cpp
)

cxx_test(
  PRETTY_NAME test.alg.min_element
  BIN_NAME alg.min_element
  SOURCES min_element.cpp
)

cxx_test(
  PRETTY_NAME test.alg.minmax_element
  BIN_NAME alg.minmax_element
  SOURCES minmax_element.cpp
)

cxx_test(
  PRETTY_NAME test.alg.mismatch
  BIN_NAME alg.mismatch
  SOURCES mismatch.cpp
)

cxx_test(
  PRETTY_NAME test.alg.move
  BIN_NAME alg.move
  SOURCES move.cpp
)

cxx_test(
  PRETTY_NAME test.alg.move_backward
  BIN_NAME alg.move_backward
  SOURCES move_backward.cpp
)

cxx_test(
  PRETTY_NAME test.alg.next_permutation
  BIN_NAME alg.next_permutation
  SOURCES next_permutation.cpp
)

cxx_test(
  PRETTY_NAME test.alg.nth_element
  BIN_NAME alg.nth_element
  SOURCES nth_element.cpp
)

cxx_test(
  PRETTY_NAME test.alg.partial_sort
  BIN_NAME alg.partial_sort
  SOURCES partial_sort.cpp
)

cxx_test(
  PRETTY_NAME test.alg.partial_sort_copy
  BIN_NAME alg.partial_sort_copy
  SOURCES partial_sort_copy.cpp
)

cxx_test(
  PRETTY_NAME test.alg.partition
  BIN_NAME alg.partition
  SOURCES partition.cpp
)

cxx_test(
  PRETTY_NAME test.alg.partition_copy
  BIN_NAME alg.partition_copy
  SOURCES partition_copy.cpp
)

cxx_test(
  PRETTY_NAME test.alg.partition_point
  BIN_NAME alg.partition_point
  SOURCES partition_point.cpp
)

cxx_test(
  PRETTY_NAME test.alg.pop_heap
  BIN_NAME alg.pop_heap
  SOURCES pop_heap.cpp
)

cxx_test(
  PRETTY_NAME test.alg.prev_permutation
  BIN_NAME alg.prev_permutation
  SOURCES prev_permutation.cpp
)

cxx_test(
  PRETTY_NAME test.alg.push_heap
  BIN_NAME alg.push_heap
  SOURCES push_heap.cpp
)

cxx_test(
  PRETTY_NAME test.alg.random_shuffle
  BIN_NAME alg.random_shuffle
  SOURCES random_shuffle.cpp
)

cxx_test(
  PRETTY_NAME test.alg.remove
  BIN_NAME alg.remove
  SOURCES remove.cpp
)

cxx_test(
  PRETTY_NAME test.alg.remove_copy
  BIN_NAME alg.remove_copy
  SOURCES remove_copy.cpp
)

cxx_test(
  PRETTY_NAME test.alg.remove_copy_if
  BIN_NAME alg.remove_copy_if
  SOURCES remove_copy_if.cpp
)

cxx_test(
  PRETTY_NAME test.alg.remove_if
  BIN_NAME alg.remove_if
  SOURCES remove_if.cpp
)

cxx_test(
  PRETTY_NAME test.alg.replace
  BIN_NAME alg.replace
  SOURCES replace.cpp
)

cxx_test(
  PRETTY_NAME test.alg.replace_copy
  BIN_NAME alg.replace_copy
  SOURCES replace_copy.cpp
)

cxx_test(
  PRETTY_NAME test.alg.replace_copy_if
  BIN_NAME alg.replace_copy_if
  SOURCES replace_copy_if.cpp
)

cxx_test(
  PRETTY_NAME test.alg.replace_if
  BIN_NAME alg.replace_if
  SOURCES replace_if.cpp
)

cxx_test(
  PRETTY_NAME test.alg.reverse
  BIN_NAME alg.reverse
  SOURCES reverse.cpp
)

cxx_test(
  PRETTY_NAME test.alg.reverse_copy
  BIN_NAME alg.reverse_copy
  SOURCES reverse_copy.cpp
)

cxx_test(
  PRETTY_NAME test.alg.rotate
  BIN_NAME alg.rotate
  SOURCES rotate.cpp
)

cxx_test(
  PRETTY_NAME test.alg.rotate_copy
  BIN_NAME alg.rotate_copy
  SOURCES rotate_copy.cpp
)

cxx_test(
  PRETTY_NAME test.alg.search
  BIN_NAME alg.search
  SOURCES search.cpp
)

cxx_test(
  PRETTY_NAME test.alg.search_n
  BIN_NAME alg.search_n
  SOURCES search_n.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_difference1
  BIN_NAME alg.set_difference1
  SOURCES set_difference1.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_difference2
  BIN_NAME alg.set_difference2
  SOURCES set_difference2.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_difference3
  BIN_NAME alg.set_difference3
  SOURCES set_difference3.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_difference4
  BIN_NAME alg.set_difference4
  SOURCES set_difference4.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_difference5
  BIN_NAME alg.set_difference5
  SOURCES set_difference5.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_difference6
  BIN_NAME alg.set_difference6
  SOURCES set_difference6.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_intersection1
  BIN_NAME alg.set_intersection1
  SOURCES set_intersection1.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_intersection2
  BIN_NAME alg.set_intersection2
  SOURCES set_intersection2.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_intersection3
  BIN_NAME alg.set_intersection3
  SOURCES set_intersection3.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_intersection4
  BIN_NAME alg.set_intersection4
  SOURCES set_intersection4.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_intersection5
  BIN_NAME alg.set_intersection5
  SOURCES set_intersection5.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_intersection6
  BIN_NAME alg.set_intersection6
  SOURCES set_intersection6.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_symmetric_difference1
  BIN_NAME alg.set_symmetric_difference1
  SOURCES set_symmetric_difference1.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_symmetric_difference2
  BIN_NAME alg.set_symmetric_difference2
  SOURCES set_symmetric_difference2.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_symmetric_difference3
  BIN_NAME alg.set_symmetric_difference3
  SOURCES set_symmetric_difference3.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_symmetric_difference4
  BIN_NAME alg.set_symmetric_difference4
  SOURCES set_symmetric_difference4.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_symmetric_difference5
  BIN_NAME alg.set_symmetric_difference5
  SOURCES set_symmetric_difference5.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_symmetric_difference6
  BIN_NAME alg.set_symmetric_difference6
  SOURCES set_symmetric_difference6.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_union1
  BIN_NAME alg.set_union1
  SOURCES set_union1.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_union2
  BIN_NAME alg.set_union2
  SOURCES set_union2.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_union3
  BIN_NAME alg.set_union3
  SOURCES set_union3.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_union4
  BIN_NAME alg.set_union4
  SOURCES set_union4.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_union5
  BIN_NAME alg.set_union5
  SOURCES set_union5.cpp
)

cxx_test(
  PRETTY_NAME test.alg.set_union6
  BIN_NAME alg.set_union6
  SOURCES set_union6.cpp
)

cxx_test(
  PRETTY_NAME test.alg.shuffle
  BIN_NAME alg.shuffle
  SOURCES shuffle.cpp
)

cxx_test(
  PRETTY_NAME test.alg.sort
  BIN_NAME alg.sort
  SOURCES sort.cpp
)

cxx_test(
  PRETTY_NAME test.alg.sort_heap
  BIN_NAME alg.sort_heap
  SOURCES sort_heap.cpp
)

cxx_test(
  PRETTY_NAME test.alg.stable_partition
  BIN_NAME alg.stable_partition
  SOURCES stable_partition.cpp
)

cxx_test(
  PRETTY_NAME test.alg.stable_sort
  BIN_NAME alg.stable_sort
  SOURCES stable_sort.cpp
)

cxx_test(
  PRETTY_NAME test.alg.swap_ranges
  BIN_NAME alg.swap_ranges
  SOURCES swap_ranges.cpp
)

cxx_test(
  PRETTY_NAME test.alg.transform
  BIN_NAME alg.transform
  SOURCES transform.cpp
)

cxx_test(
  PRETTY_NAME test.alg.unique
  BIN_NAME alg.unique
  SOURCES unique.cpp
)

cxx_test(
  PRETTY_NAME test.alg.unique_copy
  BIN_NAME alg.unique_copy
  SOURCES unique_copy.cpp
)

cxx_test(
  PRETTY_NAME test.alg.upper_bound
  BIN_NAME alg.upper_bound
  SOURCES upper_bound.cpp
)
